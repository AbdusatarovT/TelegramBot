# import logging
# import traceback
# import time

from email import message
import telebot
from telebot import types
from admin_app import app
from configuration import BOT_TOKEN
from db_home.models import User
from db_home.models import db
from send_email import send_pass
from informations import info_text

bot = telebot.TeleBot(BOT_TOKEN)

# –ú–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–¥–∞ –¥–ª—è –ø–æ–¥—Ç–≤—Ä–∂–¥–µ–Ω–∏—è
def code_generation():
    import random
    from string import ascii_letters, digits
    symb = ascii_letters + digits
    secure_random = random.SystemRandom()
    code = ''.join(secure_random.choice(symb) for i in range(8))
    return code

# –ú–µ—Ç–æ–¥ –¥–ª—è –¥–ª—è –ë–î
def db_table_val(email: str, otp: str, user_id: int):
    with app.app_context():
        user = User()
        user.email = email
        user.user_id = user_id
        user.otp = otp
        db.session.add(user)
        db.session.commit()

# –º–µ—Ç–æ–¥ –¥–ª—è —É–¥–æ–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
def delete_user(id):
    with app.app_context():
        a = db.session.query(User).filter(User.user_id == id).first()
        if id == a.user_id:
            db.session.delete(a)
            db.session.commit()

def update(id):
    with app.app_context():
        a = db.session.query(User).filter(User.user_id == id).first()
        a.active = True
        if id == a.user_id:
            db.session.add(a)
            db.session.commit()
            print('–í—Å–µ –æ–∫–µ–π')



@bot.message_handler(commands = ['switch'])
def switch(message):
    markup = types.InlineKeyboardMarkup()
    switch_button = types.InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏', url="https://t.me/BakaiBankStaffBot")
    markup.add(switch_button)
    bot.send_message(message.chat.id, info_text, reply_markup = markup)


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞
@bot.message_handler(commands=["start"])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å email')
    item2 = types.KeyboardButton('üìú –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')

    markup.add(item1, item2)
    
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.text == '‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å email':
        msg = bot.reply_to(message, '–í–≤–µ–¥–∏—Ç–µ email!')
        bot.register_next_step_handler(msg, send_email)
    elif message.text == 'üìú –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
        bot.send_message(message.chat.id, info_text)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è
def send_email(message):
    print(message.text)
    with app.app_context():
        try:
            if '@gmail.com' in message.text:
                otp = code_generation()
                print(otp)
                db_table_val(message.text, otp, message.from_user.id)
                # send_pass(message.text, otp)
                msg = bot.reply_to(message, '–í–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–æ–¥ –Ω–∞ –∫–æ—Ä–ø–∞—Ä–∞—Ç–∏–≤–Ω—É—é –ø–æ—á—Ç—É –ë–∞–∫–∞–π –ë–∞–Ω–∫–∞üìß. –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω—ã–π –∫–æ–¥!')
                # bot.send_message(message.chat.id, '–°–µ–∫—É–Ω–¥–æ—á–∫—É ‚òùüèª')
                bot.register_next_step_handler(msg, cod_confirm)
            else:
                msg = bot.reply_to(message, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä–ø–∞—Ä–æ—Ç–∏–≤–Ω—ã–π emai')
                bot.register_next_step_handler(msg, send_email)
        except Exception:
            bot.send_message(message.chat.id, '–í—ã —É–∂–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É!')
        


# –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–¥–∞
def cod_confirm(message):
    with app.app_context():
        otp = db.session.query(User.otp).filter(User.user_id == message.from_user.id).first()
        print(otp['otp'])
        update(message.from_user.id)
        if message.text == otp['otp']:
            bot.reply_to(message, '–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!')
        else:
            group_id = -1001799419976
            msg = bot.reply_to(message, '–ö–æ–¥ –Ω–µ –≤–µ—Ä–Ω—ã–π! –í—ã —É–¥–∞–ª–µ–Ω—ã –∏–∑ –≥—Ä—É–ø—ã!')
            delete_user(message.from_user.id)
            bot.register_next_step_handler(msg, bot.ban_chat_member(group_id, message.from_user.id))


def cod_confirm(message):
    with app.app_context():
        otp = db.session.query(User.otp).filter(User.user_id == message.from_user.id).first()
        print(otp['otp'])
        update(message.from_user.id)
        if message.text == otp['otp']:
            bot.reply_to(message, '–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!')
        else:
            group_id = -1001799419976
            msg = bot.reply_to(message, '–ö–æ–¥ –Ω–µ –≤–µ—Ä–Ω—ã–π! –í—ã —É–¥–∞–ª–µ–Ω—ã –∏–∑ –≥—Ä—É–ø—ã!')
            delete_user(message.from_user.id)
            bot.register_next_step_handler(msg, bot.ban_chat_member(group_id, message.from_user.id))



            



bot.polling(non_stop=True)
